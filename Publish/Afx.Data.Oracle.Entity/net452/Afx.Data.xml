<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Afx.Data</name>
    </assembly>
    <members>
        <member name="T:Afx.Data.Database">
            <summary>
            数据库访问基类
            </summary>
        </member>
        <member name="P:Afx.Data.Database.Log">
            <summary>
            执行sql logs
            </summary>
        </member>
        <member name="M:Afx.Data.Database.OnLog(System.String)">
            <summary>
            执行sql logs
            </summary>
        </member>
        <member name="P:Afx.Data.Database.IsDisposed">
            <summary>
            资源是否释放
            </summary>
        </member>
        <member name="P:Afx.Data.Database.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:Afx.Data.Database.ProviderFactory">
            <summary>
            DB 提供程序Factory
            </summary>
        </member>
        <member name="P:Afx.Data.Database.CommandText">
            <summary>
            获取或设置针对数据源运行的文本命令。
            </summary>
        </member>
        <member name="P:Afx.Data.Database.CommandType">
            <summary>
            指示或指定如何解释 CommandText 属性
            </summary>
        </member>
        <member name="P:Afx.Data.Database.Connection">
            <summary>
            DbConnection
            </summary>
        </member>
        <member name="M:Afx.Data.Database.#ctor(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
            初始化
            </summary>
            <param name="connection"></param>
            <param name="isOwnsConnection"></param>
        </member>
        <member name="M:Afx.Data.Database.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            初始化
            </summary>
            <param name="ConnectionString"></param>
            <param name="providerFactory"></param>
        </member>
        <member name="M:Afx.Data.Database.AddParameter(System.String,System.Object)">
            <summary>
            添加 DbParameter 
            </summary>
            <param name="name">要添加到集合中的 DbParameter 的 DbParameter.ParameterName。</param>
            <param name="value">要添加到集合中的 DbParameter 的 DbParameter.Value。</param>
        </member>
        <member name="M:Afx.Data.Database.AddParameter(System.Data.Common.DbParameter)">
            <summary>
            添加 DbParameter 
            </summary>
            <param name="parameter">DbParameter</param>
        </member>
        <member name="M:Afx.Data.Database.AddParameter(System.Data.Common.DbParameter[])">
            <summary>
            添加 DbParameter[]
            </summary>
            <param name="parameters">DbParameter[]</param>
        </member>
        <member name="M:Afx.Data.Database.ClearParameters">
            <summary>
            移除所有 DbParameter
            </summary>
        </member>
        <member name="P:Afx.Data.Database.Parameters">
            <summary>
            相关的参数集合
            </summary>
        </member>
        <member name="M:Afx.Data.Database.ExecuteReader">
            <summary>
            执行并返回 DbDataReader
            </summary>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Afx.Data.Database.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            执行并返回 DbDataReader
            </summary>
            <param name="behavior">System.Data.CommandBehavior 值之一。</param>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Afx.Data.Database.ExecuteScalar">
            <summary>
            执行并返回查询结果集中第一行的第一列。所有其他的列和行将被忽略。
            </summary>
            <returns>object</returns>
        </member>
        <member name="M:Afx.Data.Database.ExecuteNonQuery">
            <summary>
            对连接对象执行 SQL 语句。
            </summary>
            <returns>受影响的行数。</returns>
        </member>
        <member name="M:Afx.Data.Database.Fill(System.Data.DataTable)">
            <summary>
            在 DataTable 的指定范围中添加或刷新行
            </summary>
            <param name="dt">用于表映射的 DataTable 的名称</param>
            <returns>已在 DataTable 中成功添加或刷新的行数。</returns>
        </member>
        <member name="M:Afx.Data.Database.Fill(System.Data.DataSet)">
            <summary>
            在 System.Data.DataSet 中添加或刷新行。
            </summary>
            <param name="ds">要用记录和架构（如有必要）填充的 DataSet</param>
            <returns>已在 DataSet 中成功添加或刷新的行数</returns>
        </member>
        <member name="P:Afx.Data.Database.IsTransaction">
            <summary>
            是否开启事务
            </summary>
        </member>
        <member name="M:Afx.Data.Database.BeginTransaction">
            <summary>
            开启事务
            </summary>
        </member>
        <member name="M:Afx.Data.Database.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            开启事务
            </summary>
            <param name="isolationLevel">事务级别</param>
        </member>
        <member name="M:Afx.Data.Database.Commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:Afx.Data.Database.Rollback">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:Afx.Data.Database.Dispose">
            <summary>
            释放所有资源
            </summary>
        </member>
        <member name="M:Afx.Data.Database.CreateConnection">
            <summary>
            创建全新 DbConnection
            </summary>
            <returns>DbConnection</returns>
        </member>
        <member name="M:Afx.Data.Database.CreateCommand">
            <summary>
            创建全新 DbCommand
            </summary>
            <returns>DbCommand</returns>
        </member>
        <member name="M:Afx.Data.Database.CreateParameter">
            <summary>
            创建全新 DbParameter
            </summary>
            <returns>DbParameter</returns>
        </member>
        <member name="M:Afx.Data.Database.CreateParameter(System.String,System.Object)">
            <summary>
            创建全新 DbParameter
            </summary>
            <param name="name">ParameterName</param>
            <param name="value">Value</param>
            <returns>DbParameter</returns>
        </member>
        <member name="M:Afx.Data.Database.CreateDataAdapter">
            <summary>
            创建全新 DbDataAdapter
            </summary>
            <returns>DbDataAdapter</returns>
        </member>
        <member name="M:Afx.Data.Database.EncodeParameterName(System.String)">
            <summary>
            参数化查询名称加前缀
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.Database.EncodeColumn(System.String)">
            <summary>
            列名转义
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.Database.GetLocalNow">
            <summary>
            获取当前local时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.Database.GetUtcNow">
            <summary>
            获取当前utc时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Afx.Data.IDatabase">
            <summary>
            数据库访问接口
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.Log">
            <summary>
            执行sql logs
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.IsDisposed">
            <summary>
            资源是否释放
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.CommandText">
            <summary>
            获取或设置针对数据源运行的文本命令。
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.Parameters">
            <summary>
            相关的参数集合
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.CommandType">
            <summary>
            指示或指定如何解释 CommandText 属性
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.Connection">
            <summary>
            DbConnection
            </summary>
        </member>
        <member name="M:Afx.Data.IDatabase.AddParameter(System.String,System.Object)">
            <summary>
            添加 DbParameter 
            </summary>
            <param name="name">要添加到集合中的 DbParameter 的 DbParameter.ParameterName。</param>
            <param name="value">要添加到集合中的 DbParameter 的 DbParameter.Value。</param>
        </member>
        <member name="M:Afx.Data.IDatabase.AddParameter(System.Data.Common.DbParameter)">
            <summary>
            添加 DbParameter 
            </summary>
            <param name="parameter">DbParameter</param>
        </member>
        <member name="M:Afx.Data.IDatabase.AddParameter(System.Data.Common.DbParameter[])">
            <summary>
            添加 DbParameter[]
            </summary>
            <param name="parameters">DbParameter[]</param>
        </member>
        <member name="M:Afx.Data.IDatabase.ClearParameters">
            <summary>
            移除所有 DbParameter
            </summary>
        </member>
        <member name="M:Afx.Data.IDatabase.ExecuteReader">
            <summary>
            执行并返回 DbDataReader
            </summary>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            执行并返回 DbDataReader
            </summary>
            <param name="behavior">System.Data.CommandBehavior 值之一。</param>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.ExecuteScalar">
            <summary>
            执行并返回查询结果集中第一行的第一列。所有其他的列和行将被忽略。
            </summary>
            <returns>object</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.ExecuteNonQuery">
            <summary>
            对连接对象执行 SQL 语句。
            </summary>
            <returns>受影响的行数。</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.Fill(System.Data.DataTable)">
            <summary>
            在 DataTable 的指定范围中添加或刷新行
            </summary>
            <param name="dt">用于表映射的 DataTable 的名称</param>
            <returns>已在 DataTable 中成功添加或刷新的行数。</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.Fill(System.Data.DataSet)">
            <summary>
            在 System.Data.DataSet 中添加或刷新行。
            </summary>
            <param name="ds">要用记录和架构（如有必要）填充的 DataSet</param>
            <returns>已在 DataSet 中成功添加或刷新的行数</returns>
        </member>
        <member name="P:Afx.Data.IDatabase.IsTransaction">
            <summary>
            是否开启事务
            </summary>
        </member>
        <member name="M:Afx.Data.IDatabase.BeginTransaction">
            <summary>
            开启事务
            </summary>
        </member>
        <member name="M:Afx.Data.IDatabase.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            开启事务
            </summary>
            <param name="isolationLevel">事务级别</param>
        </member>
        <member name="M:Afx.Data.IDatabase.Commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:Afx.Data.IDatabase.Rollback">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="P:Afx.Data.IDatabase.ProviderFactory">
            <summary>
            DB 提供程序Factory
            </summary>
        </member>
        <member name="M:Afx.Data.IDatabase.CreateConnection">
            <summary>
            创建全新 DbConnection
            </summary>
            <returns>DbConnection</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.CreateCommand">
            <summary>
            创建全新 DbCommand
            </summary>
            <returns>DbCommand</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.CreateParameter">
            <summary>
            创建全新 DbParameter
            </summary>
            <returns>DbParameter</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.CreateParameter(System.String,System.Object)">
            <summary>
            创建全新 DbParameter
            </summary>
            <param name="name">ParameterName</param>
            <param name="value">Value</param>
            <returns>DbParameter</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.CreateDataAdapter">
            <summary>
            创建全新 DbDataAdapter
            </summary>
            <returns>DbDataAdapter</returns>
        </member>
        <member name="M:Afx.Data.IDatabase.EncodeParameterName(System.String)">
            <summary>
            参数化查询名称加前缀
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.IDatabase.EncodeColumn(System.String)">
            <summary>
            列名转义
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.IDatabase.GetLocalNow">
            <summary>
            获取当前local时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.IDatabase.GetUtcNow">
            <summary>
            获取当前utc时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Afx.Data.MSSQLServer.MsSqlDatabase">
            <summary>
            ms SqlServer 数据访问类实现
            </summary>
        </member>
        <member name="M:Afx.Data.MSSQLServer.MsSqlDatabase.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connectionString">连接字符串</param>
        </member>
        <member name="M:Afx.Data.MSSQLServer.MsSqlDatabase.#ctor(System.Data.SqlClient.SqlConnection,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="connection">数据库链接</param>
            <param name="isOwnsConnection">释放资源时是否释放链接</param>
        </member>
        <member name="M:Afx.Data.MSSQLServer.MsSqlDatabase.EncodeParameterName(System.String)">
            <summary>
            参数化查询名称加前缀
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.MSSQLServer.MsSqlDatabase.EncodeColumn(System.String)">
            <summary>
            列名转义
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.MSSQLServer.MsSqlDatabase.GetLocalNow">
            <summary>
            获取当前local时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.MSSQLServer.MsSqlDatabase.GetUtcNow">
            <summary>
            获取当前utc时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Afx.Data.AfxDataReader">
            <summary>
            Reads a forward-only stream of rows from a data source.
            </summary>
        </member>
        <member name="M:Afx.Data.AfxDataReader.Close">
            <summary>
            Closes the System.Data.Common.DbDataReader object.
            </summary>
        </member>
        <member name="P:Afx.Data.AfxDataReader.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
        </member>
        <member name="P:Afx.Data.AfxDataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetBoolean(System.Int32)">
            <summary>
             Gets the value of the specified column as a Boolean.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a byte.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column, starting at location indicated by dataOffset, into the buffer, starting at the location indicated by bufferOffset.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <param name="dataOffset">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to copy the data.</param>
            <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
            <param name="length">The maximum number of characters to read.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetChar(System.Int32)">
            <summary>
            Gets the value of the specified column as a single character.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns> The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column, starting at location indicated by dataOffset, into the buffer, starting at the location indicated by bufferOffset.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <param name="dataOffset">The index within the row from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to copy the data.</param>
            <param name="bufferOffset">The index with the buffer to which the data will be copied.</param>
            <param name="length">The maximum number of characters to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets name of the data type of the specified column.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>A string representing the name of the data type.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the value of the specified column as a System.DateTime object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the value of the specified column as a System.Decimal object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a double-precision floating point number.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns> The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetEnumerator">
            <summary>
            Returns an System.Collections.IEnumerator that can be used to iterate through
             the rows in the data reader.
            </summary>
            <returns>An System.Collections.IEnumerator that can be used to iterate through the rows in the data reader.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the data type of the specified column.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The data type of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the value of the specified column as a float object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetGuid(System.Int32)">
            <summary>
            Gets the value of the specified column as a Guid object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetInt16(System.Int32)">
            <summary>
            Gets the value of the specified column as a short object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the value of the specified column as a int object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the value of the specified column as a long object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetName(System.Int32)">
            <summary>
            Gets the name of the column, given the zero-based column ordinal.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal given the name of the column.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetSchemaTable">
            <summary>
             Returns a System.Data.DataTable that describes the column metadata of the System.Data.Common.DbDataReader.
            </summary>
            <returns>A System.Data.DataTable that describes the column metadata.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetString(System.Int32)">
            <summary>
            Gets the value of the specified column as a string object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetValue(System.Int32)">
            <summary>
            Gets the value of the specified column as a object.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetValues(System.Object[])">
            <summary>
            Populates an array of objects with the column values of the current row.
            </summary>
            <param name="values">An array of System.Object into which to copy the attribute columns.</param>
            <returns>The number of instances of System.Object in the array.</returns>
        </member>
        <member name="P:Afx.Data.AfxDataReader.HasRows">
            <summary>
            Gets a value that indicates whether this System.Data.Common.DbDataReader contains
             one or more rows.
            </summary>
        </member>
        <member name="P:Afx.Data.AfxDataReader.IsClosed">
            <summary>
             Gets a value indicating whether the System.Data.Common.DbDataReader is closed.
            </summary>
        </member>
        <member name="M:Afx.Data.AfxDataReader.IsDBNull(System.Int32)">
            <summary>
            Gets a value that indicates whether the column contains nonexistent or missing values.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>true if the specified column is equivalent to System.DBNull; otherwise false.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.NextResult">
            <summary>
            Advances the reader to the next result when reading the results of a batch of  statements.
            </summary>
            <returns>true if there are more result sets; otherwise false.</returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.Read">
            <summary>
            Advances the reader to the next record in a result set.
            </summary>
            <returns>true if there are more rows; otherwise false.</returns>
        </member>
        <member name="P:Afx.Data.AfxDataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
        </member>
        <member name="P:Afx.Data.AfxDataReader.Item(System.String)">
            <summary>
             Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="P:Afx.Data.AfxDataReader.Item(System.Int32)">
            <summary>
             Gets the value of the specified column as an instance of System.Object.
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="P:Afx.Data.AfxDataReader.VisibleFieldCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:Afx.Data.AfxDataReader.CreateObjRef(System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetProviderSpecificFieldType(System.Int32)">
            <summary>
            
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetProviderSpecificValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetProviderSpecificValues(System.Object[])">
            <summary>
            
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.InitializeLifetimeService">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetDbDataReader(System.Int32)">
            <summary>
            
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetFieldValue``1(System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetStream(System.Int32)">
            <summary>
            
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetTextReader(System.Int32)">
            <summary>
            
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="ordinal"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ordinal"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.NextResultAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.AfxDataReader.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Afx.Data.OleDbDatabase">
            <summary>
            OleDb
            </summary>
        </member>
        <member name="M:Afx.Data.OleDbDatabase.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connectionString">连接字符串</param>
        </member>
        <member name="M:Afx.Data.OleDbDatabase.#ctor(System.Data.OleDb.OleDbConnection,System.Boolean)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="isOwnsConnection"></param>
        </member>
        <member name="M:Afx.Data.OleDbDatabase.EncodeParameterName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Afx.Data.OleDbDatabase.EncodeColumn(System.String)">
            <summary>
            
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:Afx.Data.Transaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="P:Afx.Data.Transaction.Current">
            <summary>
            当前事务
            </summary>
        </member>
        <member name="M:Afx.Data.Transaction.Commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:Afx.Data.Transaction.Rollback">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:Afx.Data.Transaction.Dispose">
            <summary>
            是否资源，回滚未提交事务
            </summary>
        </member>
    </members>
</doc>
